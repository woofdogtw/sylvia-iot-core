name: Release Sylvia-IoT core
on:
  push:
    tags:
      - v*
env:
  GHR_VER: v0.17.0
  BIN_DIR: dist
  SBOM_VER: v0.10.0
  SBOM_DIR: sbom
jobs:
  crates:
    name: Publish crates.io
    runs-on: ubuntu-24.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
      - name: Login to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          cargo login ${CARGO_REGISTRY_TOKEN}
      - name: Publish general-mq
        run: |
          cargo publish -p general-mq
      - name: Publish sylvia-iot-corelib
        run: |
          cargo publish -p sylvia-iot-corelib
      - name: Publish sylvia-iot-auth
        run: |
          cargo publish -p sylvia-iot-auth
      - name: Publish sylvia-iot-broker
        run: |
          cargo publish -p sylvia-iot-broker
      - name: Publish sylvia-iot-coremgr
        run: |
          cargo publish -p sylvia-iot-coremgr
      - name: Publish sylvia-iot-coremgr-cli
        run: |
          cargo publish -p sylvia-iot-coremgr-cli
      - name: Publish sylvia-iot-data
        run: |
          cargo publish -p sylvia-iot-data
      - name: Publish sylvia-iot-sdk
        run: |
          cargo publish -p sylvia-iot-sdk
  release:
    name: Publish GitHub Releases and Docker Hub
    needs: crates
    runs-on: ubuntu-24.04
    env:
      TARGET_X86_64: x86_64-unknown-linux-musl
      TARGET_ARM64: aarch64-unknown-linux-musl
    steps:
      - name: Install tools
        run: |
          sudo apt update
          sudo apt -y install gcc-aarch64-linux-gnu
          cargo install cross --git https://github.com/cross-rs/cross
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
      - name: Clear release target for x86_64
        run: |
          rm -rf target/release
      - name: Build general-mq x86_64
        run: cross build -p general-mq --release --target ${TARGET_X86_64}
      - name: Build corelib x86_64
        run: cross build -p sylvia-iot-corelib --release --target ${TARGET_X86_64}
      - name: Build auth x86_64
        run: cross build -p sylvia-iot-auth --release --target ${TARGET_X86_64}
      - name: Build broker x86_64
        run: cross build -p sylvia-iot-broker --release --target ${TARGET_X86_64}
      - name: Build coremgr x86_64
        run: cross build -p sylvia-iot-coremgr --release --target ${TARGET_X86_64}
      - name: Build coremgr-cli x86_64
        run: cross build -p sylvia-iot-coremgr-cli --release --target ${TARGET_X86_64}
      - name: Build data x86_64
        run: cross build -p sylvia-iot-data --release --target ${TARGET_X86_64}
      - name: Build sdk x86_64
        run: cross build -p sylvia-iot-sdk --release --target ${TARGET_X86_64}
      - name: Build router x86_64
        run: cross build -p sylvia-router --release --target ${TARGET_X86_64}
      - name: Clear release target for arm64
        run: |
          rm -rf target/release
      - name: Build general-mq arm64
        run: cross build -p general-mq --release --target ${TARGET_ARM64}
      - name: Build corelib arm64
        run: cross build -p sylvia-iot-corelib --release --target ${TARGET_ARM64}
      - name: Build auth arm64
        run: cross build -p sylvia-iot-auth --release --target ${TARGET_ARM64}
      - name: Build broker arm64
        run: cross build -p sylvia-iot-broker --release --target ${TARGET_ARM64}
      - name: Build coremgr arm64
        run: cross build -p sylvia-iot-coremgr --release --target ${TARGET_ARM64}
      - name: Build coremgr-cli arm64
        run: cross build -p sylvia-iot-coremgr-cli --release --target ${TARGET_ARM64}
      - name: Build data arm64
        run: cross build -p sylvia-iot-data --release --target ${TARGET_ARM64}
      - name: Build sdk arm64
        run: cross build -p sylvia-iot-sdk --release --target ${TARGET_ARM64}
      - name: Build router arm64
        run: cross build -p sylvia-router --release --target ${TARGET_ARM64}
      - name: Prepare assets
        run: |
          mkdir -p ${BIN_DIR}
          BINARIES="sylvia-iot-auth sylvia-iot-broker sylvia-iot-coremgr sylvia-iot-coremgr-cli sylvia-iot-data sylvia-iot-core sylvia-router sylvia-router-cli"
          for TARGET in ${TARGET_X86_64} ${TARGET_ARM64}; do
            cd target/${TARGET}/release
            cp $BINARIES ../../../${BIN_DIR}/
            cd ../../../${BIN_DIR}
            for BIN in $BINARIES; do
              ARCH_SUFFIX=$(echo $TARGET | grep -q "aarch64" && echo "arm64" || echo "x86_64")
              echo "Packing $BIN for $ARCH_SUFFIX"
              if [ "$ARCH_SUFFIX" = "x86_64" ]; then
                strip -o $BIN $BIN
              elif [ "$ARCH_SUFFIX" = "arm64" ]; then
                aarch64-linux-gnu-strip -o $BIN $BIN
              fi
              tar cf ${BIN}-${ARCH_SUFFIX}.tar $BIN
              rm $BIN
            done
            cd ..
          done
          xz -z -9 -e ${BIN_DIR}/*
      - name: Prepare SBOM
        run: |
          mkdir -p ${SBOM_DIR}
          curl -kLo cargo-sbom https://github.com/psastras/sbom-rs/releases/download/cargo-sbom-${SBOM_VER}/cargo-sbom-x86_64-unknown-linux-gnu
          chmod +x cargo-sbom
          PKGS="general-mq sylvia-iot-auth sylvia-iot-broker sylvia-iot-coremgr sylvia-iot-coremgr-cli sylvia-iot-data sylvia-iot-sdk sylvia-router"
          FORMATS="spdx_json_2_3 cyclone_dx_json_1_4"
          for PKG in $PKGS; do
            for FMT in $FORMATS; do
              EXT=$(echo $FMT | grep -q spdx && echo "spdx.json" || echo "cdx.json")
              ./cargo-sbom --cargo-package $PKG --output-format $FMT > ${SBOM_DIR}/$PKG.$EXT
            done
          done
          # sylvia-iot-core (workspace root)
          for FMT in $FORMATS; do
            EXT=$(echo $FMT | grep -q spdx && echo "spdx.json" || echo "cdx.json")
            ./cargo-sbom --output-format $FMT > ${SBOM_DIR}/sylvia-iot-core.$EXT
          done
          tar cf sbom.tar sbom
          xz -z -9 -e sbom.tar
          mv sbom.tar.xz ${BIN_DIR}/
      - name: Prepare SHA256SUMS and VERSION
        env:
          RELEASE_VER: ${{ github.ref_name }}
        run: |
          cd ${BIN_DIR}
          sha256sum * > SHA256SUMS
          echo -n ${RELEASE_VER:1} > VERSION
          cd ..
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta auth - scratch
        id: meta-auth
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=true
          images: |
            woofdogtw/sylvia-iot-auth
            ghcr.io/woofdogtw/sylvia-iot-auth
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - name: Create auth Docker image - scratch
        uses: docker/build-push-action@v6
        with:
          build-args: |
            BIN_DIR=${{ env.BIN_DIR }}
            PROJ=sylvia-iot-auth
          context: .
          file: ./files/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-auth.outputs.tags }}
          target: scratch
      - name: Docker meta auth - alpine
        id: meta-auth-alpine
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=false
          images: |
            woofdogtw/sylvia-iot-auth
            ghcr.io/woofdogtw/sylvia-iot-auth
          tags: |
            type=semver,pattern={{version}}-alpine
            type=semver,pattern={{major}}.{{minor}}-alpine
            type=semver,pattern={{major}}-alpine
      - name: Create auth Docker image - alpine
        uses: docker/build-push-action@v6
        with:
          build-args: |
            BIN_DIR=${{ env.BIN_DIR }}
            PROJ=sylvia-iot-auth
          context: .
          file: ./files/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-auth-alpine.outputs.tags }}
          target: alpine
      - name: Docker meta broker - scratch
        id: meta-broker
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=true
          images: |
            woofdogtw/sylvia-iot-broker
            ghcr.io/woofdogtw/sylvia-iot-broker
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - name: Create broker Docker image - scratch
        uses: docker/build-push-action@v6
        with:
          build-args: |
            BIN_DIR=${{ env.BIN_DIR }}
            PROJ=sylvia-iot-broker
          context: .
          file: ./files/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-broker.outputs.tags }}
          target: scratch
      - name: Docker meta broker - alpine
        id: meta-broker-alpine
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=false
          images: |
            woofdogtw/sylvia-iot-broker
            ghcr.io/woofdogtw/sylvia-iot-broker
          tags: |
            type=semver,pattern={{version}}-alpine
            type=semver,pattern={{major}}.{{minor}}-alpine
            type=semver,pattern={{major}}-alpine
      - name: Create broker Docker image - alpine
        uses: docker/build-push-action@v6
        with:
          build-args: |
            BIN_DIR=${{ env.BIN_DIR }}
            PROJ=sylvia-iot-broker
          context: .
          file: ./files/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-broker-alpine.outputs.tags }}
          target: alpine
      - name: Docker meta coremgr - scratch
        id: meta-coremgr
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=true
          images: |
            woofdogtw/sylvia-iot-coremgr
            ghcr.io/woofdogtw/sylvia-iot-coremgr
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - name: Create coremgr Docker image - scratch
        uses: docker/build-push-action@v6
        with:
          build-args: |
            BIN_DIR=${{ env.BIN_DIR }}
            PROJ=sylvia-iot-coremgr
          context: .
          file: ./files/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-coremgr.outputs.tags }}
          target: scratch
      - name: Docker meta coremgr - alpine
        id: meta-coremgr-alpine
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=false
          images: |
            woofdogtw/sylvia-iot-coremgr
            ghcr.io/woofdogtw/sylvia-iot-coremgr
          tags: |
            type=semver,pattern={{version}}-alpine
            type=semver,pattern={{major}}.{{minor}}-alpine
            type=semver,pattern={{major}}-alpine
      - name: Create coremgr Docker image - alpine
        uses: docker/build-push-action@v6
        with:
          build-args: |
            BIN_DIR=${{ env.BIN_DIR }}
            PROJ=sylvia-iot-coremgr
          context: .
          file: ./files/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-coremgr-alpine.outputs.tags }}
          target: alpine
      - name: Docker meta data - scratch
        id: meta-data
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=true
          images: |
            woofdogtw/sylvia-iot-data
            ghcr.io/woofdogtw/sylvia-iot-data
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - name: Create data Docker image - scratch
        uses: docker/build-push-action@v6
        with:
          build-args: |
            BIN_DIR=${{ env.BIN_DIR }}
            PROJ=sylvia-iot-data
          context: .
          file: ./files/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-data.outputs.tags }}
          target: scratch
      - name: Docker meta data - alpine
        id: meta-data-alpine
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=false
          images: |
            woofdogtw/sylvia-iot-data
            ghcr.io/woofdogtw/sylvia-iot-data
          tags: |
            type=semver,pattern={{version}}-alpine
            type=semver,pattern={{major}}.{{minor}}-alpine
            type=semver,pattern={{major}}-alpine
      - name: Create data Docker image - alpine
        uses: docker/build-push-action@v6
        with:
          build-args: |
            BIN_DIR=${{ env.BIN_DIR }}
            PROJ=sylvia-iot-data
          context: .
          file: ./files/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-data-alpine.outputs.tags }}
          target: alpine
      - name: Docker meta core - scratch
        id: meta-core
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=true
          images: |
            woofdogtw/sylvia-iot-core
            ghcr.io/woofdogtw/sylvia-iot-core
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - name: Create core Docker image - scratch
        uses: docker/build-push-action@v6
        with:
          build-args: |
            BIN_DIR=${{ env.BIN_DIR }}
            PROJ=sylvia-iot-core
          context: .
          file: ./files/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-core.outputs.tags }}
          target: scratch
      - name: Docker meta core - alpine
        id: meta-core-alpine
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=false
          images: |
            woofdogtw/sylvia-iot-core
            ghcr.io/woofdogtw/sylvia-iot-core
          tags: |
            type=semver,pattern={{version}}-alpine
            type=semver,pattern={{major}}.{{minor}}-alpine
            type=semver,pattern={{major}}-alpine
      - name: Create core Docker image - alpine
        uses: docker/build-push-action@v6
        with:
          build-args: |
            BIN_DIR=${{ env.BIN_DIR }}
            PROJ=sylvia-iot-core
            CLI=sylvia-iot-coremgr-cli
          context: .
          file: ./files/Dockerfile.cli
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-core-alpine.outputs.tags }}
          target: alpine
      - name: Create releases, assets and version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -LO https://github.com/tcnksm/ghr/releases/download/${GHR_VER}/ghr_${GHR_VER}_linux_amd64.tar.gz
          tar xf ghr_${GHR_VER}_linux_amd64.tar.gz
          ./ghr_${GHR_VER}_linux_amd64/ghr -u "${GITHUB_REPOSITORY%/*}" -r "${GITHUB_REPOSITORY#*/}" "${GITHUB_REF#refs/tags/}" ${BIN_DIR}
